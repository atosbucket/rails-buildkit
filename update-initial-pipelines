#!/usr/bin/env ruby
# frozen_string_literal: true

require "buildkit"

def buildkite_token
  ENV.fetch("BUILDKITE_TOKEN") {
    raise "BUILDKITE_TOKEN undefined!\nMake sure your BUILDKITE_TOKEN has `write_pipelines` scope too!"
  }
end

# Make sure your BUILDKITE_TOKEN has `write_pipelines` scope
def update_pipeline(pipeline, configuration)
  client = Buildkit.new(token: buildkite_token)
  resp = client.update_pipeline("rails", pipeline, {
    configuration: configuration
  })
  puts resp.steps
end

# Update rails/rails
puts "Updating rails/rails..."
rails_init = File.read("rails-initial-pipeline.yml")
update_pipeline("rails", rails_init)

puts "\n" * 2; puts "#####"; puts "\n" * 2

# Update rails/rails-nightly
puts "Updating rails/rails-nightly..."
rails_nightly_init = File.read("rails-nightly-initial-pipeline.yml")
update_pipeline("rails-nightly", rails_nightly_init)

puts "\n" * 2; puts "#####"; puts "\n" * 2

# Update rails/rails-ci
puts "Updating rails/rails-ci..."
update_pipeline("rails-ci", rails_init)

puts "\n" * 2; puts "#####"; puts "\n" * 2

# Update rails/rails-ci-nightly
puts "Updating rails/rails-ci-nightly..."
rails_nightly_init = File.read("rails-nightly-initial-pipeline.yml")
update_pipeline("rails-ci-nightly", rails_nightly_init)

puts "\n" * 2; puts "#####"; puts "\n" * 2

# Update rails/buildkite-config
puts "Updating rails/buildkite-config..."
buildkite_config_init = File.read("buildkite-config-initial-pipeline.yml")
update_pipeline("buildkite-config", buildkite_config_init)

# Update rails/docs-preview
puts "Updating rails/docs-preview..."
docs_preview_config_init = File.read("docs-preview-initial-pipeline.yml")
update_pipeline("docs-preview", docs_preview_config_init)
